{"remainingRequest":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/PoemComponent.vue?vue&type=template&id=25a0ba54&scoped=true&","dependencies":[{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/PoemComponent.vue","mtime":1559877829118},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _c(\"h1\", { staticClass: \"title\" }, [_vm._v(\"Poem Board\")]),\n    _c(\"div\", { staticClass: \"create-poem\" }, [\n      _c(\n        \"form\",\n        {\n          staticClass: \"create-poem-form\",\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.handleSubmit($event)\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"user-inputs\" }, [\n            _c(\"label\", { staticClass: \"user-input-label\" }, [\n              _vm._v(\"\\n          Nouns\\n          \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.nouns[0],\n                    expression: \"nouns[0]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a noun\" },\n                domProps: { value: _vm.nouns[0] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.nouns, 0, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.nouns[1],\n                    expression: \"nouns[1]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a noun\" },\n                domProps: { value: _vm.nouns[1] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.nouns, 1, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.nouns[2],\n                    expression: \"nouns[2]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a noun\" },\n                domProps: { value: _vm.nouns[2] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.nouns, 2, $event.target.value)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"user-input-label\" }, [\n              _vm._v(\"\\n          Adjectives\\n          \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adjectives[0],\n                    expression: \"adjectives[0]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adjective\" },\n                domProps: { value: _vm.adjectives[0] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adjectives, 0, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adjectives[1],\n                    expression: \"adjectives[1]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adjective\" },\n                domProps: { value: _vm.adjectives[1] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adjectives, 1, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adjectives[2],\n                    expression: \"adjectives[2]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adjective\" },\n                domProps: { value: _vm.adjectives[2] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adjectives, 2, $event.target.value)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"user-input-label\" }, [\n              _vm._v(\"\\n          Adverbs\\n          \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adverbs[0],\n                    expression: \"adverbs[0]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adverb\" },\n                domProps: { value: _vm.adverbs[0] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adverbs, 0, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adverbs[1],\n                    expression: \"adverbs[1]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adverb\" },\n                domProps: { value: _vm.adverbs[1] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adverbs, 1, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.adverbs[2],\n                    expression: \"adverbs[2]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a adverb\" },\n                domProps: { value: _vm.adverbs[2] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.adverbs, 2, $event.target.value)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"user-input-label\" }, [\n              _vm._v(\"\\n          Prepositions\\n          \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.prepositions[0],\n                    expression: \"prepositions[0]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a preposition\" },\n                domProps: { value: _vm.prepositions[0] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.prepositions, 0, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.prepositions[1],\n                    expression: \"prepositions[1]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a preposition\" },\n                domProps: { value: _vm.prepositions[1] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.prepositions, 1, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.prepositions[2],\n                    expression: \"prepositions[2]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a preposition\" },\n                domProps: { value: _vm.prepositions[2] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.prepositions, 2, $event.target.value)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"user-input-label\" }, [\n              _vm._v(\"\\n          Verbs\\n          \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.verbs[0],\n                    expression: \"verbs[0]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a verb\" },\n                domProps: { value: _vm.verbs[0] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.verbs, 0, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.verbs[1],\n                    expression: \"verbs[1]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a verb\" },\n                domProps: { value: _vm.verbs[1] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.verbs, 1, $event.target.value)\n                  }\n                }\n              }),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.verbs[2],\n                    expression: \"verbs[2]\"\n                  }\n                ],\n                staticClass: \"user-input\",\n                attrs: { type: \"text\", placeholder: \"insert a verb\" },\n                domProps: { value: _vm.verbs[2] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.verbs, 2, $event.target.value)\n                  }\n                }\n              })\n            ])\n          ]),\n          _vm.errors.length\n            ? _c(\"p\", [\n                _c(\n                  \"ul\",\n                  { staticClass: \"error-list\" },\n                  _vm._l(_vm.errors, function(error) {\n                    return _c(\n                      \"li\",\n                      {\n                        key: error,\n                        staticClass: \"error\",\n                        attrs: { item: error }\n                      },\n                      [_vm._v(_vm._s(error))]\n                    )\n                  }),\n                  0\n                )\n              ])\n            : _vm._e(),\n          _c(\n            \"button\",\n            { staticClass: \"submit-button\", attrs: { type: \"submit\" } },\n            [_vm._v(\"Submit\")]\n          )\n        ]\n      )\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"poems-container\" },\n      _vm._l(_vm.poems, function(poem, index) {\n        return _c(\n          \"div\",\n          {\n            key: poem._id,\n            staticClass: \"poem\",\n            attrs: { item: poem, index: index }\n          },\n          [\n            _c(\"div\", { staticClass: \"date-and-delete\" }, [\n              _c(\"p\", [\n                _vm._v(\n                  \"\\n          \" +\n                    _vm._s(poem.createdAt.getDate()) +\n                    \"/\" +\n                    _vm._s(poem.createdAt.getMonth()) +\n                    \"/\" +\n                    _vm._s(poem.createdAt.getFullYear()) +\n                    \"\\n        \"\n                )\n              ]),\n              _c(\"div\", { staticClass: \"edit-and-delete\" }, [\n                _c(\n                  \"p\",\n                  {\n                    staticClass: \"edit-button\",\n                    on: {\n                      click: function($event) {\n                        return _vm.renderEditForm(poem._id, poem.text)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Edit\")]\n                ),\n                _c(\n                  \"p\",\n                  {\n                    staticClass: \"delete-button\",\n                    on: {\n                      click: function($event) {\n                        return _vm.deletePoem(poem._id)\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n            X\\n          \")]\n                )\n              ])\n            ]),\n            !(_vm.editPoemId === poem._id)\n              ? _c(\"div\", {\n                  domProps: { innerHTML: _vm._s(_vm.organizePoem(poem)) }\n                })\n              : _vm._e(),\n            _vm.editPoemId === poem._id\n              ? _c(\"div\", [\n                  _c(\n                    \"form\",\n                    {\n                      staticClass: \"create-poem-form\",\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.handleSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"user-inputs\" }, [\n                        _c(\"label\", { staticClass: \"user-input-label\" }, [\n                          _vm._v(\"\\n                Nouns\\n                \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editNouns[0],\n                                expression: \"editNouns[0]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a noun\"\n                            },\n                            domProps: { value: _vm.editNouns[0] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editNouns, 0, $event.target.value)\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editNouns[1],\n                                expression: \"editNouns[1]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a noun\"\n                            },\n                            domProps: { value: _vm.editNouns[1] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editNouns, 1, $event.target.value)\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editNouns[2],\n                                expression: \"editNouns[2]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a noun\"\n                            },\n                            domProps: { value: _vm.editNouns[2] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editNouns, 2, $event.target.value)\n                              }\n                            }\n                          })\n                        ]),\n                        _c(\"label\", { staticClass: \"user-input-label\" }, [\n                          _vm._v(\n                            \"\\n                Adjectives\\n                \"\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdjectives[0],\n                                expression: \"editAdjectives[0]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adjective\"\n                            },\n                            domProps: { value: _vm.editAdjectives[0] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdjectives,\n                                  0,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdjectives[1],\n                                expression: \"editAdjectives[1]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adjective\"\n                            },\n                            domProps: { value: _vm.editAdjectives[1] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdjectives,\n                                  1,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdjectives[2],\n                                expression: \"editAdjectives[2]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adjective\"\n                            },\n                            domProps: { value: _vm.editAdjectives[2] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdjectives,\n                                  2,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          })\n                        ]),\n                        _c(\"label\", { staticClass: \"user-input-label\" }, [\n                          _vm._v(\"\\n                Adverbs\\n                \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdverbs[0],\n                                expression: \"editAdverbs[0]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adverb\"\n                            },\n                            domProps: { value: _vm.editAdverbs[0] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdverbs,\n                                  0,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdverbs[1],\n                                expression: \"editAdverbs[1]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adverb\"\n                            },\n                            domProps: { value: _vm.editAdverbs[1] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdverbs,\n                                  1,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editAdverbs[2],\n                                expression: \"editAdverbs[2]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a adverb\"\n                            },\n                            domProps: { value: _vm.editAdverbs[2] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editAdverbs,\n                                  2,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          })\n                        ]),\n                        _c(\"label\", { staticClass: \"user-input-label\" }, [\n                          _vm._v(\n                            \"\\n                Prepositions\\n                \"\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editPrepositions[0],\n                                expression: \"editPrepositions[0]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a preposition\"\n                            },\n                            domProps: { value: _vm.editPrepositions[0] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editPrepositions,\n                                  0,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editPrepositions[1],\n                                expression: \"editPrepositions[1]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a preposition\"\n                            },\n                            domProps: { value: _vm.editPrepositions[1] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editPrepositions,\n                                  1,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editPrepositions[2],\n                                expression: \"editPrepositions[2]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a preposition\"\n                            },\n                            domProps: { value: _vm.editPrepositions[2] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.editPrepositions,\n                                  2,\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          })\n                        ]),\n                        _c(\"label\", { staticClass: \"user-input-label\" }, [\n                          _vm._v(\"\\n                Verbs\\n                \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editVerbs[0],\n                                expression: \"editVerbs[0]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a verb\"\n                            },\n                            domProps: { value: _vm.editVerbs[0] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editVerbs, 0, $event.target.value)\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editVerbs[1],\n                                expression: \"editVerbs[1]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a verb\"\n                            },\n                            domProps: { value: _vm.editVerbs[1] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editVerbs, 1, $event.target.value)\n                              }\n                            }\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.editVerbs[2],\n                                expression: \"editVerbs[2]\"\n                              }\n                            ],\n                            staticClass: \"user-input\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"insert a verb\"\n                            },\n                            domProps: { value: _vm.editVerbs[2] },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.editVerbs, 2, $event.target.value)\n                              }\n                            }\n                          })\n                        ])\n                      ]),\n                      _vm.errors.length\n                        ? _c(\"p\", [\n                            _c(\n                              \"ul\",\n                              { staticClass: \"error-list\" },\n                              _vm._l(_vm.errors, function(error) {\n                                return _c(\n                                  \"li\",\n                                  {\n                                    key: error,\n                                    staticClass: \"error\",\n                                    attrs: { item: error }\n                                  },\n                                  [_vm._v(_vm._s(error))]\n                                )\n                              }),\n                              0\n                            )\n                          ])\n                        : _vm._e(),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"submit-button\",\n                          attrs: { type: \"submit\" }\n                        },\n                        [_vm._v(\"Submit\")]\n                      )\n                    ]\n                  )\n                ])\n              : _vm._e()\n          ]\n        )\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}