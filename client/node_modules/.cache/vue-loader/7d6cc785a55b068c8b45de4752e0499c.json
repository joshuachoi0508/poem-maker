{"remainingRequest":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/SinglePoemComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/SinglePoemComponent.vue","mtime":1560138058396},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PoemService from '../PoemService'\n\nexport default {\n  name: 'SinglePoemComponent',\n  props: ['handleSubmit', 'editErrors', 'editNouns', 'editAdjectives', 'editAdverbs',\n    'editPrepositions', 'editVerbs', 'editPoemId', 'poems', 'renderEditForm', 'organizePoem'],\n  methods: {\n    async deletePoem(id) {\n      await PoemService.deletePoem(id);\n      this.poems = await PoemService.getPoems();\n    }\n  }\n}\n",{"version":3,"sources":["SinglePoemComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SinglePoemComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"poems-container\">\n\n    <div class=\"poem\"\n      v-for=\"(poem, index) in poems\"\n      v-bind:item=\"poem\"\n      v-bind:index=\"index\"\n      v-bind:key=\"poem._id\"\n    >\n      <div class=\"date-and-delete\">\n        <p>\n          {{ poem.createdAt.getMonth() + 1 }}/{{ poem.createdAt.getDate() }}/{{ poem.createdAt.getFullYear()}}\n        </p>\n        <div class=\"edit-and-delete\">\n          <p\n            class=\"edit-button\"\n            v-on:click=\"renderEditForm(poem._id, poem.text)\"\n          >Edit</p>\n          <p\n            class=\"delete-button\"\n            v-on:click=\"deletePoem(poem._id)\"\n          >\n            X\n          </p>\n        </div>\n      </div>\n\n        <div \n          v-if=\"!(editPoemId === poem._id)\"\n          v-html=\"organizePoem(poem)\"\n        >\n        </div>\n\n        <div v-if=\"editPoemId === poem._id\">\n          <form \n            class=\"create-poem-form\"\n            @submit.prevent=\"handleSubmit('PUT', poem._id)\"\n          >\n            <div class=\"user-inputs\">\n              <label class=\"user-input-label\">\n                Nouns\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[0]\" placeholder=\"insert a noun\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[1]\" placeholder=\"insert a noun\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[2]\" placeholder=\"insert a noun\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Adjectives\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[0]\" placeholder=\"insert a adjective\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[1]\" placeholder=\"insert a adjective\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[2]\" placeholder=\"insert a adjective\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Adverbs\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[0]\" placeholder=\"insert a adverb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[1]\" placeholder=\"insert a adverb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[2]\" placeholder=\"insert a adverb\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Prepositions\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[0]\" placeholder=\"insert a preposition\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[1]\" placeholder=\"insert a preposition\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[2]\" placeholder=\"insert a preposition\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Verbs\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[0]\" placeholder=\"insert a verb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[1]\" placeholder=\"insert a verb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[2]\" placeholder=\"insert a verb\">\n              </label>\n            </div>\n\n            <p v-if=\"editErrors.length\">\n              <ul class=\"error-list\">\n                <li class=\"error\"\n                  v-for=\"error in editErrors\"\n                  v-bind:item=\"error\"\n                  v-bind:key=\"error\"\n                >{{ error }}</li>\n              </ul>\n            </p>\n\n            <button class=\"submit-button\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport PoemService from '../PoemService'\n\nexport default {\n  name: 'SinglePoemComponent',\n  props: ['handleSubmit', 'editErrors', 'editNouns', 'editAdjectives', 'editAdverbs',\n    'editPrepositions', 'editVerbs', 'editPoemId', 'poems', 'renderEditForm', 'organizePoem'],\n  methods: {\n    async deletePoem(id) {\n      await PoemService.deletePoem(id);\n      this.poems = await PoemService.getPoems();\n    }\n  }\n}\n</script>"]}]}