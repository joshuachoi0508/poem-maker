{"remainingRequest":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/thread-loader/dist/cjs.js!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/babel-loader/lib/index.js!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/PoemComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/PoemComponent.vue","mtime":1560138069069},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PoemService from \"../PoemService\";\nimport CreatePoemComponent from \"./CreatePoemComponent\";\nimport SinglePoemComponent from \"./SinglePoemComponent\";\nexport default {\n  name: 'PoemComponent',\n  data: function data() {\n    return {\n      poems: [],\n      editPoemId: \"\",\n      editNouns: [],\n      editAdjectives: [],\n      editAdverbs: [],\n      editPrepositions: [],\n      editVerbs: [],\n      error: '',\n      errors: [],\n      editErrors: [],\n      text: '',\n      nouns: [],\n      adjectives: [],\n      adverbs: [],\n      prepositions: [],\n      verbs: []\n    };\n  },\n  components: {\n    CreatePoemComponent: CreatePoemComponent,\n    SinglePoemComponent: SinglePoemComponent\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return PoemService.getPoems();\n\n            case 3:\n              this.poems = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              this.error = _context.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 6]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    createPoem: function () {\n      var _createPoem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return PoemService.insertPoem(this.text);\n\n              case 2:\n                _context2.next = 4;\n                return PoemService.getPoems();\n\n              case 4:\n                this.poems = _context2.sent;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createPoem() {\n        return _createPoem.apply(this, arguments);\n      }\n\n      return createPoem;\n    }(),\n    editPoem: function () {\n      var _editPoem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return PoemService.editPoem(id, this.text);\n\n              case 2:\n                _context3.next = 4;\n                return PoemService.getPoems();\n\n              case 4:\n                this.poems = _context3.sent;\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function editPoem(_x) {\n        return _editPoem.apply(this, arguments);\n      }\n\n      return editPoem;\n    }(),\n    handleSubmit: function handleSubmit(type, id) {\n      this.errors = [];\n      this.editErrors = [];\n\n      if (type === \"POST\" && this.checkLength(\"POST\") && this.checkChars(\"POST\")) {\n        var firstFirstWord = this.prepositions[1][0].toUpperCase() + this.prepositions[1].slice(1).toLowerCase();\n        var secondFirstWord = this.prepositions[2][0].toUpperCase() + this.prepositions[2].slice(1).toLowerCase();\n        var thirdFirstWord = this.prepositions[0][0].toUpperCase() + this.prepositions[0].slice(1).toLowerCase();\n        var title = this.nouns[2][0].toUpperCase() + this.nouns[2].slice(1);\n        this.text = \"\".concat(title, \".\") + \"\".concat(firstFirstWord, \" \").concat(this.adjectives[0].toLowerCase(), \" \").concat(this.nouns[2].toLowerCase(), \" \").concat(this.adverbs[2].toLowerCase(), \" \").concat(this.verbs[1].toLowerCase(), \".\") + \"\".concat(secondFirstWord, \" \").concat(this.adjectives[2].toLowerCase(), \" \").concat(this.nouns[0].toLowerCase(), \" \").concat(this.adverbs[1].toLowerCase(), \" \").concat(this.verbs[2].toLowerCase(), \".\") + \"\".concat(thirdFirstWord, \" \").concat(this.adjectives[1].toLowerCase(), \" \").concat(this.nouns[1].toLowerCase(), \" \").concat(this.adverbs[0].toLowerCase(), \" \").concat(this.verbs[0].toLowerCase(), \".\");\n        this.nouns = [];\n        this.adjectives = [];\n        this.adverbs = [];\n        this.prepositions = [];\n        this.verbs = [];\n        this.createPoem();\n      }\n\n      if (type === 'PUT' && this.checkLength(\"PUT\") && this.checkChars(\"PUT\")) {\n        var _firstFirstWord = this.editPrepositions[0][0].toUpperCase() + this.editPrepositions[0].slice(1).toLowerCase();\n\n        var _secondFirstWord = this.editPrepositions[1][0].toUpperCase() + this.editPrepositions[1].slice(1).toLowerCase();\n\n        var _thirdFirstWord = this.editPrepositions[2][0].toUpperCase() + this.editPrepositions[2].slice(1).toLowerCase();\n\n        var _title = this.editNouns[0][0].toUpperCase() + this.editNouns[0].slice(1);\n\n        this.text = \"\".concat(_title, \".\") + \"\".concat(_firstFirstWord, \" \").concat(this.editAdjectives[0].toLowerCase(), \" \").concat(this.editNouns[0].toLowerCase(), \" \").concat(this.editAdverbs[0].toLowerCase(), \" \").concat(this.editVerbs[0].toLowerCase(), \".\") + \"\".concat(_secondFirstWord, \" \").concat(this.editAdjectives[1].toLowerCase(), \" \").concat(this.editNouns[1].toLowerCase(), \" \").concat(this.editAdverbs[1].toLowerCase(), \" \").concat(this.editVerbs[1].toLowerCase(), \".\") + \"\".concat(_thirdFirstWord, \" \").concat(this.editAdjectives[2].toLowerCase(), \" \").concat(this.editNouns[2].toLowerCase(), \" \").concat(this.editAdverbs[2].toLowerCase(), \" \").concat(this.editVerbs[2].toLowerCase(), \".\");\n        this.editNouns = [];\n        this.editAdjectives = [];\n        this.editAdverbs = [];\n        this.editPrepositions = [];\n        this.editVerbs = [];\n        this.editPoemId = \"\";\n        this.editPoem(id);\n      }\n    },\n    checkLength: function checkLength(type) {\n      if (type === \"POST\" && !(this.nouns.length === 3 && this.adjectives.length === 3 && this.adverbs.length === 3 && this.prepositions.length === 3 && this.verbs.length === 3)) {\n        this.errors.push('Insert all fields');\n        return false;\n      }\n\n      if (type === \"PUT\") {\n        for (var i = 0; i < this.editNouns.length; i++) {\n          var noun = this.editNouns[i];\n\n          if (noun === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n        }\n\n        for (var _i = 0; _i < this.editAdjectives.length; _i++) {\n          var adjective = this.editAdjectives[_i];\n\n          if (adjective === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n        }\n\n        for (var _i2 = 0; _i2 < this.editAdverbs.length; _i2++) {\n          var adverb = this.editAdverbs[_i2];\n\n          if (adverb === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n        }\n\n        for (var _i3 = 0; _i3 < this.editPrepositions.length; _i3++) {\n          var preposition = this.editPrepositions[_i3];\n\n          if (preposition === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n        }\n\n        for (var _i4 = 0; _i4 < this.editVerbs.length; _i4++) {\n          var Verb = this.editVerbs[_i4];\n\n          if (Verb === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n    checkChars: function checkChars(type) {\n      var alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('');\n\n      if (type === \"POST\") {\n        for (var i = 0; i < this.nouns.length; i++) {\n          var noun = this.nouns[i];\n          if (noun === undefined) return false;\n\n          for (var j = 0; j < noun.length; j++) {\n            if (!alphabet.includes(noun[j])) {\n              this.errors.push('Only insert English characters without any space');\n              return false;\n            }\n          }\n        }\n\n        for (var _i5 = 0; _i5 < this.adjectives.length; _i5++) {\n          var adjective = this.adjectives[_i5];\n          if (adjective === undefined) return false;\n\n          for (var _j = 0; _j < adjective.length; _j++) {\n            if (!alphabet.includes(adjective[_j])) {\n              this.errors.push('Insert only English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i6 = 0; _i6 < this.adverbs.length; _i6++) {\n          var adverb = this.adverbs[_i6];\n          if (adverb === undefined) return false;\n\n          for (var _j2 = 0; _j2 < adverb.length; _j2++) {\n            if (!alphabet.includes(adverb[_j2])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i7 = 0; _i7 < this.prepositions.length; _i7++) {\n          var preposition = this.prepositions[_i7];\n          if (preposition === undefined) return false;\n\n          for (var _j3 = 0; _j3 < preposition.length; _j3++) {\n            if (!alphabet.includes(preposition[_j3])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i8 = 0; _i8 < this.verbs.length; _i8++) {\n          var verb = this.verbs[_i8];\n          if (verb === undefined) return false;\n\n          for (var _j4 = 0; _j4 < verb.length; _j4++) {\n            if (!alphabet.includes(verb[_j4])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n      }\n\n      if (type === \"PUT\") {\n        for (var _i9 = 0; _i9 < this.editNouns.length; _i9++) {\n          var _noun = this.editNouns[_i9];\n          if (_noun === undefined) return false;\n\n          for (var _j5 = 0; _j5 < _noun.length; _j5++) {\n            if (!alphabet.includes(_noun[_j5])) {\n              this.editErrors.push('Only insert English characters without any space');\n              return false;\n            }\n          }\n        }\n\n        for (var _i10 = 0; _i10 < this.editAdjectives.length; _i10++) {\n          var _adjective = this.editAdjectives[_i10];\n          if (_adjective === undefined) return false;\n\n          for (var _j6 = 0; _j6 < _adjective.length; _j6++) {\n            if (!alphabet.includes(_adjective[_j6])) {\n              this.editErrors.push('Insert only English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i11 = 0; _i11 < this.editAdverbs.length; _i11++) {\n          var _adverb = this.editAdverbs[_i11];\n          if (_adverb === undefined) return false;\n\n          for (var _j7 = 0; _j7 < _adverb.length; _j7++) {\n            if (!alphabet.includes(_adverb[_j7])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i12 = 0; _i12 < this.prepositions.length; _i12++) {\n          var _preposition = this.prepositions[_i12];\n          if (_preposition === undefined) return false;\n\n          for (var _j8 = 0; _j8 < _preposition.length; _j8++) {\n            if (!alphabet.includes(_preposition[_j8])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n\n        for (var _i13 = 0; _i13 < this.verbs.length; _i13++) {\n          var _verb = this.verbs[_i13];\n          if (_verb === undefined) return false;\n\n          for (var _j9 = 0; _j9 < _verb.length; _j9++) {\n            if (!alphabet.includes(_verb[_j9])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n    organizePoem: function organizePoem(poem) {\n      var poemArray = poem.text.split('.');\n      return \"\\n      <p data-v-25a0ba54 class=\\\"text\\\">\\n        \".concat(poemArray[0], \"\\n        </br>\\n        </br>\\n        \").concat(poemArray[1], \"\\n        </br>\\n        \").concat(poemArray[2], \"\\n        </br>\\n        \").concat(poemArray[3], \"\\n      </p>\\n      \");\n    },\n    renderEditForm: function renderEditForm(id, text) {\n      if (this.editPoemId === id) {\n        this.editPoemId = \"\";\n        this.editNouns = [];\n        this.editAdjectives = [];\n        this.editAdverbs = [];\n        this.editPrepositions = [];\n        this.editVerbs = [];\n      } else {\n        this.editPoemId = id;\n        this.updateEditWords(text);\n      }\n    },\n    updateEditWords: function updateEditWords(text) {\n      var sentences = text.split(\".\");\n      var words = sentences.slice(1).join(\" \").split(\" \");\n      this.editNouns = [];\n      this.editAdjectives = [];\n      this.editAdverbs = [];\n      this.editPrepositions = [];\n      this.editVerbs = [];\n      this.editNouns.push(words[2], words[7], words[12]);\n      this.editAdjectives.push(words[1], words[6], words[11]);\n      this.editAdverbs.push(words[3], words[8], words[13]);\n      this.editPrepositions.push(words[0], words[5], words[10]);\n      this.editVerbs.push(words[4], words[9], words[14]);\n    }\n  }\n};",{"version":3,"sources":["PoemComponent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"title\">Poem Board</h1>\n      <CreatePoemComponent \n        v-bind:handleSubmit=\"handleSubmit\"\n        v-bind:errors=\"errors\"\n        v-bind:nouns=\"nouns\"\n        v-bind:adjectives=\"adjectives\"\n        v-bind:adverbs=\"adverbs\"\n        v-bind:prepositions=\"prepositions\"\n        v-bind:verbs=\"verbs\"\n      />\n\n      <SinglePoemComponent \n        v-bind:handleSubmit=\"handleSubmit\"\n        v-bind:editErrors=\"editErrors\"\n        v-bind:editNouns=\"editNouns\"\n        v-bind:editAdjectives=\"editAdjectives\"\n        v-bind:editAdverbs=\"editAdverbs\"\n        v-bind:editPrepositions=\"editPrepositions\"\n        v-bind:editVerbs=\"editVerbs\"\n        v-bind:editPoemId=\"editPoemId\"\n        v-bind:poems=\"poems\"\n        v-bind:renderEditForm=\"renderEditForm\"\n        v-bind:organizePoem=\"organizePoem\"\n      />\n      \n  </div>\n</template>\n\n<script>\nimport PoemService from '../PoemService'\nimport CreatePoemComponent from './CreatePoemComponent';\nimport SinglePoemComponent from './SinglePoemComponent';\n\nexport default {\n  name: 'PoemComponent',\n  data() {\n    return {\n      poems: [],\n      editPoemId: \"\",\n      editNouns: [],\n      editAdjectives: [],\n      editAdverbs: [],\n      editPrepositions: [],\n      editVerbs: [],\n      error: '',\n      errors: [],\n      editErrors: [],\n      text: '',\n      nouns: [],\n      adjectives: [],\n      adverbs: [],\n      prepositions: [],\n      verbs: []\n    }\n  },\n  components: {\n    CreatePoemComponent,\n    SinglePoemComponent\n  },\n  async created() {\n    try {\n      this.poems = await PoemService.getPoems();\n    } catch(err) {\n      this.error = err.message;\n    }\n  },\n  methods: {\n    async createPoem() {\n      await PoemService.insertPoem(this.text);\n      this.poems = await PoemService.getPoems();\n    },\n    async editPoem(id) {\n      await PoemService.editPoem(id, this.text);\n      this.poems = await PoemService.getPoems();\n    },\n    handleSubmit(type, id) {\n      this.errors = [];\n      this.editErrors = [];\n\n      if (type === \"POST\" && this.checkLength(\"POST\") && this.checkChars(\"POST\")) {\n        const firstFirstWord = this.prepositions[1][0].toUpperCase() + this.prepositions[1].slice(1).toLowerCase();\n        const secondFirstWord = this.prepositions[2][0].toUpperCase() + this.prepositions[2].slice(1).toLowerCase();\n        const thirdFirstWord = this.prepositions[0][0].toUpperCase() + this.prepositions[0].slice(1).toLowerCase();\n        const title = this.nouns[2][0].toUpperCase() + this.nouns[2].slice(1);\n\n        this.text = `${title}.`\n        + `${firstFirstWord} ${this.adjectives[0].toLowerCase()} ${this.nouns[2].toLowerCase()} ${this.adverbs[2].toLowerCase()} ${this.verbs[1].toLowerCase()}.`\n        + `${secondFirstWord} ${this.adjectives[2].toLowerCase()} ${this.nouns[0].toLowerCase()} ${this.adverbs[1].toLowerCase()} ${this.verbs[2].toLowerCase()}.`\n        + `${thirdFirstWord} ${this.adjectives[1].toLowerCase()} ${this.nouns[1].toLowerCase()} ${this.adverbs[0].toLowerCase()} ${this.verbs[0].toLowerCase()}.`;\n\n        this.nouns = [];\n        this.adjectives = [];\n        this.adverbs = [];\n        this.prepositions = [];\n        this.verbs = [];\n\n        this.createPoem();\n      }\n\n      if (type === 'PUT' && this.checkLength(\"PUT\") && this.checkChars(\"PUT\")) {\n        const firstFirstWord = this.editPrepositions[0][0].toUpperCase() + this.editPrepositions[0].slice(1).toLowerCase();\n        const secondFirstWord = this.editPrepositions[1][0].toUpperCase() + this.editPrepositions[1].slice(1).toLowerCase();\n        const thirdFirstWord = this.editPrepositions[2][0].toUpperCase() + this.editPrepositions[2].slice(1).toLowerCase();\n        const title = this.editNouns[0][0].toUpperCase() + this.editNouns[0].slice(1);\n\n        this.text = `${title}.`\n        + `${firstFirstWord} ${this.editAdjectives[0].toLowerCase()} ${this.editNouns[0].toLowerCase()} ${this.editAdverbs[0].toLowerCase()} ${this.editVerbs[0].toLowerCase()}.`\n        + `${secondFirstWord} ${this.editAdjectives[1].toLowerCase()} ${this.editNouns[1].toLowerCase()} ${this.editAdverbs[1].toLowerCase()} ${this.editVerbs[1].toLowerCase()}.`\n        + `${thirdFirstWord} ${this.editAdjectives[2].toLowerCase()} ${this.editNouns[2].toLowerCase()} ${this.editAdverbs[2].toLowerCase()} ${this.editVerbs[2].toLowerCase()}.`;\n  \n        this.editNouns = [];\n        this.editAdjectives = [];\n        this.editAdverbs = [];\n        this.editPrepositions = [];\n        this.editVerbs = [];\n        this.editPoemId = \"\";\n        this.editPoem(id);\n      }\n    },\n    checkLength(type) {\n      if (type === \"POST\" && !(this.nouns.length === 3 && this.adjectives.length === 3 &&\n      this.adverbs.length === 3 && this.prepositions.length === 3 &&\n      this.verbs.length === 3)) {\n        this.errors.push('Insert all fields');\n        return false;\n      }\n\n      if (type === \"PUT\") {\n        for(let i = 0; i < this.editNouns.length; i++) {\n          const noun = this.editNouns[i];\n          if (noun === \"\") {\n            this.editErrors.push('Insert all fields');\n            return false;\n          }\n\n        }\n\n        for(let i = 0; i < this.editAdjectives.length; i++) {\n          const adjective = this.editAdjectives[i];\n          if (adjective === \"\") {\n            this.editErrors.push('Insert all fields')\n            return false;\n          }\n        }\n\n        for(let i = 0; i < this.editAdverbs.length; i++) {\n          const adverb = this.editAdverbs[i];\n          if (adverb === \"\") {\n            this.editErrors.push('Insert all fields')\n            return false;\n          }\n        }\n\n        for(let i = 0; i < this.editPrepositions.length; i++) {\n          const preposition = this.editPrepositions[i];\n          if (preposition === \"\") {\n            this.editErrors.push('Insert all fields')\n           return false;\n          }\n        }\n\n        for(let i = 0; i < this.editVerbs.length; i++) {\n          const Verb = this.editVerbs[i];\n          if (Verb === \"\") {\n            this.editErrors.push('Insert all fields')\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    checkChars(type) {\n      const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('')\n\n      if (type === \"POST\") {\n        for(let i = 0; i < this.nouns.length; i++) {\n          const noun = this.nouns[i];\n          if (noun === undefined) return false;\n  \n          for(let j = 0; j < noun.length; j++) {\n            if (!alphabet.includes(noun[j])) {\n              this.errors.push('Only insert English characters without any space');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.adjectives.length; i++) {\n          const adjective = this.adjectives[i];\n          if (adjective === undefined) return false;\n  \n          for(let j = 0; j < adjective.length; j++) {\n            if (!alphabet.includes(adjective[j])) {\n              this.errors.push('Insert only English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.adverbs.length; i++) {\n          const adverb = this.adverbs[i];\n          if (adverb === undefined) return false;\n  \n          for(let j = 0; j < adverb.length; j++) {\n            if (!alphabet.includes(adverb[j])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.prepositions.length; i++) {\n          const preposition = this.prepositions[i];\n          if (preposition === undefined) return false;\n  \n          for(let j = 0; j < preposition.length; j++) {\n            if (!alphabet.includes(preposition[j])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.verbs.length; i++) {\n          const verb = this.verbs[i];\n          if (verb === undefined) return false;\n  \n          for(let j = 0; j < verb.length; j++) {\n            if (!alphabet.includes(verb[j])) {\n              this.errors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n      }\n\n      if (type === \"PUT\") {\n        for(let i = 0; i < this.editNouns.length; i++) {\n          const noun = this.editNouns[i];\n          if (noun === undefined) return false;\n  \n          for(let j = 0; j < noun.length; j++) {\n            if (!alphabet.includes(noun[j])) {\n              this.editErrors.push('Only insert English characters without any space');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.editAdjectives.length; i++) {\n          const adjective = this.editAdjectives[i];\n          if (adjective === undefined) return false;\n  \n          for(let j = 0; j < adjective.length; j++) {\n            if (!alphabet.includes(adjective[j])) {\n              this.editErrors.push('Insert only English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.editAdverbs.length; i++) {\n          const adverb = this.editAdverbs[i];\n          if (adverb === undefined) return false;\n  \n          for(let j = 0; j < adverb.length; j++) {\n            if (!alphabet.includes(adverb[j])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.prepositions.length; i++) {\n          const preposition = this.prepositions[i];\n          if (preposition === undefined) return false;\n  \n          for(let j = 0; j < preposition.length; j++) {\n            if (!alphabet.includes(preposition[j])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n  \n        for(let i = 0; i < this.verbs.length; i++) {\n          const verb = this.verbs[i];\n          if (verb === undefined) return false;\n  \n          for(let j = 0; j < verb.length; j++) {\n            if (!alphabet.includes(verb[j])) {\n              this.editErrors.push('Only insert English characters');\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n    organizePoem(poem){\n      const poemArray = poem.text.split('.');\n\n      return `\n      <p data-v-25a0ba54 class=\"text\">\n        ${poemArray[0]}\n        </br>\n        </br>\n        ${poemArray[1]}\n        </br>\n        ${poemArray[2]}\n        </br>\n        ${poemArray[3]}\n      </p>\n      `;\n    },\n    renderEditForm(id, text) {\n      if (this.editPoemId === id) {\n        this.editPoemId = \"\";\n        this.editNouns = [];\n        this.editAdjectives = [];\n        this.editAdverbs = [];\n        this.editPrepositions = [];\n        this.editVerbs = [];\n      } else {\n        this.editPoemId = id;\n        this.updateEditWords(text);\n      }\n    },\n    updateEditWords(text){\n      const sentences = text.split(\".\");\n      const words = sentences.slice(1).join(\" \").split(\" \");\n\n      this.editNouns = [];\n      this.editAdjectives = [];\n      this.editAdverbs = [];\n      this.editPrepositions = [];\n      this.editVerbs = [];\n\n      this.editNouns.push(words[2], words[7], words[12]);\n      this.editAdjectives.push(words[1], words[6], words[11]);\n      this.editAdverbs.push(words[3], words[8], words[13]);\n      this.editPrepositions.push(words[0], words[5], words[10]);\n      this.editVerbs.push(words[4], words[9], words[14]);\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import \"reset.scss\";\n@import \"main.css\";\n</style>\n"],"sourceRoot":"src/components"}]}