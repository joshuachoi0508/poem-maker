{"remainingRequest":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/thread-loader/dist/cjs.js!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/babel-loader/lib/index.js!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/SinglePoemComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/src/components/SinglePoemComponent.vue","mtime":1560138058396},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/JoshC/Desktop/Applications/GSVlabs/poem_maker/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PoemService from \"../PoemService\";\nexport default {\n  name: 'SinglePoemComponent',\n  props: ['handleSubmit', 'editErrors', 'editNouns', 'editAdjectives', 'editAdverbs', 'editPrepositions', 'editVerbs', 'editPoemId', 'poems', 'renderEditForm', 'organizePoem'],\n  methods: {\n    deletePoem: function () {\n      var _deletePoem = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(id) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return PoemService.deletePoem(id);\n\n              case 2:\n                _context.next = 4;\n                return PoemService.getPoems();\n\n              case 4:\n                this.poems = _context.sent;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function deletePoem(_x) {\n        return _deletePoem.apply(this, arguments);\n      }\n\n      return deletePoem;\n    }()\n  }\n};",{"version":3,"sources":["SinglePoemComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,KAAA,EAAA,CAAA,cAAA,EAAA,YAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,aAAA,EACA,kBADA,EACA,WADA,EACA,YADA,EACA,OADA,EACA,gBADA,EACA,cADA,CAFA;AAIA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA,+CACA,EADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,WAAA,CAAA,UAAA,CAAA,EAAA,CAFA;;AAAA;AAAA;AAAA,uBAGA,WAAA,CAAA,QAAA,EAHA;;AAAA;AAGA,qBAAA,KAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAJA,CAAA","sourcesContent":["<template>\n  <div class=\"poems-container\">\n\n    <div class=\"poem\"\n      v-for=\"(poem, index) in poems\"\n      v-bind:item=\"poem\"\n      v-bind:index=\"index\"\n      v-bind:key=\"poem._id\"\n    >\n      <div class=\"date-and-delete\">\n        <p>\n          {{ poem.createdAt.getMonth() + 1 }}/{{ poem.createdAt.getDate() }}/{{ poem.createdAt.getFullYear()}}\n        </p>\n        <div class=\"edit-and-delete\">\n          <p\n            class=\"edit-button\"\n            v-on:click=\"renderEditForm(poem._id, poem.text)\"\n          >Edit</p>\n          <p\n            class=\"delete-button\"\n            v-on:click=\"deletePoem(poem._id)\"\n          >\n            X\n          </p>\n        </div>\n      </div>\n\n        <div \n          v-if=\"!(editPoemId === poem._id)\"\n          v-html=\"organizePoem(poem)\"\n        >\n        </div>\n\n        <div v-if=\"editPoemId === poem._id\">\n          <form \n            class=\"create-poem-form\"\n            @submit.prevent=\"handleSubmit('PUT', poem._id)\"\n          >\n            <div class=\"user-inputs\">\n              <label class=\"user-input-label\">\n                Nouns\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[0]\" placeholder=\"insert a noun\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[1]\" placeholder=\"insert a noun\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editNouns[2]\" placeholder=\"insert a noun\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Adjectives\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[0]\" placeholder=\"insert a adjective\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[1]\" placeholder=\"insert a adjective\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdjectives[2]\" placeholder=\"insert a adjective\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Adverbs\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[0]\" placeholder=\"insert a adverb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[1]\" placeholder=\"insert a adverb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editAdverbs[2]\" placeholder=\"insert a adverb\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Prepositions\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[0]\" placeholder=\"insert a preposition\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[1]\" placeholder=\"insert a preposition\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editPrepositions[2]\" placeholder=\"insert a preposition\">\n              </label>\n\n              <label class=\"user-input-label\">\n                Verbs\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[0]\" placeholder=\"insert a verb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[1]\" placeholder=\"insert a verb\">\n                <input type=\"text\" class=\"user-input\" v-model=\"editVerbs[2]\" placeholder=\"insert a verb\">\n              </label>\n            </div>\n\n            <p v-if=\"editErrors.length\">\n              <ul class=\"error-list\">\n                <li class=\"error\"\n                  v-for=\"error in editErrors\"\n                  v-bind:item=\"error\"\n                  v-bind:key=\"error\"\n                >{{ error }}</li>\n              </ul>\n            </p>\n\n            <button class=\"submit-button\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport PoemService from '../PoemService'\n\nexport default {\n  name: 'SinglePoemComponent',\n  props: ['handleSubmit', 'editErrors', 'editNouns', 'editAdjectives', 'editAdverbs',\n    'editPrepositions', 'editVerbs', 'editPoemId', 'poems', 'renderEditForm', 'organizePoem'],\n  methods: {\n    async deletePoem(id) {\n      await PoemService.deletePoem(id);\n      this.poems = await PoemService.getPoems();\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components"}]}